<!DOCTYPE html>
<html lang="tr">
<head>
<meta charset="UTF-8">
<title>Quantum Network Presale</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<style>
body { font-family:Arial,sans-serif; background: radial-gradient(circle at top,#0f0c29,#302b63,#24243e); color:#00f0ff; text-align:center; padding:40px; }
h1 { font-size:2.4em; color:#0ff; text-shadow:0 0 5px #0ff,0 0 20px #f0f; margin-bottom:10px; }
.controls { margin:20px auto; display:flex; gap:10px; justify-content:center; flex-wrap:wrap;}
input { padding:10px 12px; border-radius:8px; border:none; min-width:260px; text-align:center; }
button { padding:12px 18px; font-size:1em; color:#fff; background:linear-gradient(45deg,#ff00ff,#00ffff); border:none; border-radius:10px; cursor:pointer; box-shadow:0 0 10px #ff00ff; }
.panel { margin-top:24px; display:none; background:rgba(0,0,0,0.85); padding:22px; border-radius:14px; min-width:350px; box-shadow:0 0 30px #00ffff; color:#00ffea; text-align:left; }
.token-box { margin:14px 0; padding:14px; background:rgba(255,255,255,0.03); border-radius:12px; text-align:center; }
.token-amount { font-size:2.4em; font-weight:700; color:#0ff; text-shadow:0 0 10px #0ff; animation:pulse 1.5s infinite; }
.bonus-note { font-size:0.85em; color:#ff00ff; margin-top:6px; }
.payment-history { margin-top:18px; font-size:0.9em; }
table { width:100%; border-collapse:collapse; }
th, td { padding:4px 6px; text-align:center; font-size:0.9em; }
th { color:#ff00ff; text-shadow:0 0 5px #ff00ff; }
td { color:#0ff; }
.success-message { display:none; color:#0f0; margin-top:10px; text-align:center;}
@keyframes pulse { 0%{transform:scale(1);} 50%{transform:scale(1.08);} 100%{transform:scale(1);} }
.small { font-size:0.85em; color:#9ff; }
</style>
</head>
<body>

<h1>Quantum Network Presale</h1>

<div class="controls">
  <input id="walletAddress" placeholder="CÃ¼zdan Adresi (Opsiyonel)"/>
  <button id="buyBtn">Buy Now</button>
</div>

<div class="panel" id="userPanel">
  <h2>User Panel</h2>
  <p><strong>Wallet:</strong> <span id="userWallet">-</span></p>
  <p><strong>Payment Status:</strong> <span id="status">Pending</span></p>

  <div class="token-box">
    <div id="totalToken" class="token-amount">0</div>
    <div class="bonus-note">+25% BONUS INCLUDED</div>
  </div>

  <div class="payment-history">
    <h3>Payment History</h3>
    <table id="historyTable" border="0" cellspacing="0" cellpadding="4">
      <thead>
        <tr>
          <th style="text-align:left;">Date</th>
          <th>USD</th>
          <th>Tokens</th>
        </tr>
      </thead>
      <tbody></tbody>
    </table>
  </div>

  <div style="text-align:center; margin-top:12px;">
    <button id="claimBtn" disabled>Claim Tokens</button>
  </div>

  <div id="successMessage" class="success-message">ðŸŽ‰ Payment received! Tokens will arrive shortly.</div>
</div>

<script>
const TOKEN_PRICE = 0.02;
const BONUS = 0.25;
const API_URL = "https://<YOUR_BACKEND_URL>"; // Render backend URL

const buyBtn = document.getElementById("buyBtn");
const walletInput = document.getElementById("walletAddress");
const userPanel = document.getElementById("userPanel");
const userWalletEl = document.getElementById("userWallet");
const statusEl = document.getElementById("status");
const totalTokenEl = document.getElementById("totalToken");
const historyTbody = document.querySelector("#historyTable tbody");
const claimBtn = document.getElementById("claimBtn");
const successMessageEl = document.getElementById("successMessage");

let pollingInterval;

buyBtn.addEventListener("click", ()=>{
    const usd = parseFloat(prompt("Enter USD to spend:", "10"));
    if(!usd || usd<=0) return alert("LÃ¼tfen geÃ§erli bir USD miktarÄ± girin.");
    const wallet = walletInput.value.trim() || "default_"+Date.now();

    userPanel.style.display = "block";
    userWalletEl.innerText = wallet;
    statusEl.innerText = "Awaiting Payment...";
    totalTokenEl.innerText = "0";
    successMessageEl.style.display = "none";

    const nowUrl = `https://nowpayments.io/donation?api_key=HZJTX1G-57W45J2-KTM52WF-8BDMY3N&amount=${usd}&order_id=${wallet}`;
    window.open(nowUrl,"_blank");

    if(pollingInterval) clearInterval(pollingInterval);
    pollingInterval = setInterval(async ()=>{
        try{
            const res = await fetch(`${API_URL}/api/user-tokens/${encodeURIComponent(wallet)}`);
            const data = await res.json();
            if(data.totalTokens > 0){
                totalTokenEl.innerText = data.totalTokens.toLocaleString();
                statusEl.innerText = "Payment Successful!";
                successMessageEl.style.display = "block";

                const tr = document.createElement("tr");
                tr.innerHTML = `<td>${new Date().toLocaleString()}</td><td>${usd}</td><td>${data.totalTokens}</td>`;
                historyTbody.appendChild(tr);

                claimBtn.disabled = false;
                claimBtn.onclick = ()=>{ alert("Tokens claimed to your wallet! ðŸŽ‰"); claimBtn.disabled = true; };

                clearInterval(pollingInterval);
            }
        }catch(err){
            console.error(err);
            statusEl.innerText = "Server Error!";
        }
    },3000);
});
</script>

</body>
</html>